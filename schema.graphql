scalar Upload

type File {
  filename: String!
  mimetype: String!
  encoding: String!
}

type PostComment {
  firstname: String!
  lastname: String!
  username: String!
  comment: String!
  profile_picture: String
}

type Comment {
  user_id: Int!
  post_id: Int!
  comment: String!
}

type Post {
  id: Int!
  content: String!
  created_at: String!
  image_url: String!
  likes: String!
  liked: Boolean
  user: User!
  comments: [PostComment]
}

type User {
  id: Int!
  firstname: String!
  lastname: String!
  email: String!
  created_at: String!
  profile_picture: String
  bio: String!
  username: String!
  followers: String!
  following: String!
  is_following: Boolean!
}

type AuthenticatedUser {
  user: User
  token: String!
}

type Like {
  user_id: Int!
  post_id: Int!
}

type Follow {
  follower: Int!
  followee: Int!
}

type Conversation_Message {
  user_id: Int!
  profile_picture: String
  firstname: String!
  lastname: String!
  message: String!
  conversation_id: Int!
}

type Conversation {
  user1: Int!
  user2: Int!
  id: Int!
  messages: [Conversation_Message]
}

type Message {
  message: String!
}

type Query {
  user(username: String!, context_id: Int!): User
  post(id: Int!, context_id: Int!): Post
  userFeed(id: Int!, after: Int): [Post]
  userPosts(id: Int!, context_id: Int!, after: Int): [Post]
  followers(id: Int!): [User]
  following(id: Int!): [User]
  searchUser(username: String!): [User]
  likedPosts(id: Int!): [Post]
  trending: [Post]
  userConversations(user_id: Int!): [Conversation]
}

type Mutation {
  newUser(firstname: String!, lastname: String!, email: String!, password: String!, bio: String!, username: String!): AuthenticatedUser
  newLike(user_id: Int!, post_id: Int!): Like
  newFollow(follower: Int!, followee: Int!): Follow
  newPost(file: Upload!, content: String!, user_id: Int!): Post
  loginUser(email: String!, password: String!): AuthenticatedUser
  removeLike(user_id: Int!, post_id: Int!): Message
  removeFollow(follower: Int!, followee: Int!): Message
  updateInfo(id: Int!, bio: String!, profile_picture: Upload!): User!
  deletePost(post_id: Int!): Message
  newComment(user_id: Int!, post_id: Int!, comment: String!): Comment!
  newConversation(user1: Int!, user2: Int!): Conversation!
  newMessage(user_id: Int!, message: String!, conversation_id: Int!): Conversation_Message
}

type Subscription {
  newPost(feed_id: Int!): Post
  newMessage(user_id: Int!): Conversation_Message
}